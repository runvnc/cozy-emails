// Generated by CoffeeScript 1.9.1
var americano, emit;

americano = require('americano');

emit = null;

module.exports = {
  settings: {
    all: americano.defaultRequests.all
  },
  account: {
    all: americano.defaultRequests.all
  },
  contact: {
    all: americano.defaultRequests.all,
    byName: function(doc) {
      var dp, i, len, ref, results;
      if ((doc.fn != null) && doc.fn.length > 0) {
        emit(doc.fn, doc);
      }
      if (doc.n != null) {
        emit(doc.n.split(';').join(' ').trim(), doc);
      }
      ref = doc.datapoints;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        dp = ref[i];
        if (dp.name === 'email') {
          emit(dp.value, doc);
          results.push(emit(dp.value.split('@')[1], doc));
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    byEmail: function(doc) {
      var dp, i, len, ref, results;
      ref = doc.datapoints;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        dp = ref[i];
        if (dp.name === 'email') {
          results.push(emit(dp.value, doc));
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  },
  mailbox: {
    treeMap: function(doc) {
      return emit([doc.accountID].concat(doc.tree), null);
    }
  },
  message: {
    byMailboxRequest: {
      reduce: '_count',
      map: function(doc) {
        var boxid, docDate, i, len, ref, ref1, uid, xflag;
        ref = doc.mailboxIDs;
        for (boxid in ref) {
          uid = ref[boxid];
          docDate = doc.date || (new Date()).toISOString();
          emit(['uid', boxid, uid], doc.flags);
          emit(['date', boxid, null, docDate], null);
          emit(['subject', boxid, null, doc.normSubject], null);
          ref1 = ['\\Seen', '\\Flagged', '\\Answered'];
          for (i = 0, len = ref1.length; i < len; i++) {
            xflag = ref1[i];
            if (-1 === doc.flags.indexOf(xflag)) {
              xflag = '!' + xflag;
            }
            emit(['date', boxid, xflag, docDate], null);
            emit(['subject', boxid, xflag, doc.normSubject], null);
          }
        }
        return void 0;
      }
    },
    dedupRequest: function(doc) {
      if (doc.messageID) {
        emit([doc.accountID, 'mid', doc.messageID], doc.conversationID);
      }
      if (doc.normSubject) {
        return emit([doc.accountID, 'subject', doc.normSubject], doc.conversationID);
      }
    },
    byConversationID: {
      reduce: '_count',
      map: function(doc) {
        if (doc.conversationID) {
          return emit(doc.conversationID);
        }
      }
    }
  }
};
